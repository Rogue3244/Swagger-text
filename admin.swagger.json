{
  "swagger": "2.0",
  "info": {
    "title": "HTML INJECTION FOR POC PURPOSE"
    "version": "1.0"
  },
  "tags": [
    {
      "name": "Groups"
    },
    {
      "name": "Lenses"
    },
    {
      "name": "Connections"
    }
  ],
  "host": "api-kit.snapchat.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/com.snap.camerakit.admin.s2s.v1.Connections/connections": {
      "put": {
        "summary": "This API provides a way to create connection between between lenses and groups.",
        "operationId": "Connections_CreateBulk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.CreateBulkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.CreateBulkRequest"
            }
          }
        ],
        "tags": [
          "Connections"
        ]
      }
    },
    "/com.snap.camerakit.admin.s2s.v1.Connections/releaseConnections": {
      "put": {
        "summary": "This API provides a way to release lenses from groups.",
        "operationId": "Connections_ReleaseBulk",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.ReleaseBulkResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.ReleaseBulkRequest"
            }
          }
        ],
        "tags": [
          "Connections"
        ]
      }
    },
    "/com.snap.camerakit.admin.s2s.v1.Groups/groups": {
      "get": {
        "summary": "API to get list of groups in an organization.",
        "operationId": "Groups_GetGroupList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GetGroupListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "description": "query to get only Active groups vs all groups.\n\n - ONLY_ACTIVE_UNSET: only active\n - ALL: all.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "ONLY_ACTIVE_UNSET",
              "ALL"
            ],
            "default": "ONLY_ACTIVE_UNSET"
          },
          {
            "name": "limit",
            "description": "groups page limit. limit \u003e 0 \u0026 limit \u003c= 100.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "lens_limit",
            "description": "lens limit. limit \u003e 0 \u0026 limit \u003c= 100.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "offset",
            "description": "offset.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Groups"
        ]
      },
      "put": {
        "summary": "API to save a group",
        "operationId": "Groups_SaveGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.SaveGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.SaveGroupRequest"
            }
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/com.snap.camerakit.admin.s2s.v1.Groups/groups/{id}": {
      "get": {
        "summary": "API to get group with its connections in an organization.",
        "operationId": "Groups_GetGroup",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GetGroupResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "group identifier - group Id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "lens_limit",
            "description": "lens limit. lens_limit \u003e 0 \u0026 lens_limit \u003c= 100.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "Groups"
        ]
      }
    },
    "/com.snap.camerakit.admin.s2s.v1.Lenses/id/{id}/reference/{reference}": {
      "get": {
        "summary": "API to get Lens Metadata.",
        "operationId": "Lenses_GetLens",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GetLensResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "Lens id.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "reference",
            "description": "The reference is used to identify an owner for the current lens source. It can be a reference to Snapchat User ID\nif lens lens source is Snapchat User; or it can be a reference to namespace if lens source is lens space.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Lenses"
        ]
      }
    },
    "/com.snap.camerakit.admin.s2s.v1.Lenses/lenses": {
      "get": {
        "summary": "API to get all lenses in the organization.",
        "operationId": "Lenses_GetLensList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GetLensListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "page limit. limit \u003e 0 \u0026 limit\u003c = 100.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cursor",
            "description": "A cursor received from previous response to be passed in the next request.",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Lenses"
        ]
      },
      "put": {
        "summary": "API to update lens vendor data.",
        "operationId": "Lenses_UpdateLensVendorData",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.UpdateLensVendorDataResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.UpdateLensVendorDataRequest"
            }
          }
        ],
        "tags": [
          "Lenses"
        ]
      }
    }
  },
  "definitions": {
    "com.snap.camerakit.admin.s2s.v1.CreateBulkRequest": {
      "type": "object",
      "properties": {
        "create_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.CreateConnectionRequest"
          },
          "description": "list of create group \u0026 lens connection requests."
        }
      },
      "description": "Req to create group \u0026 lens connections in bulk."
    },
    "com.snap.camerakit.admin.s2s.v1.CreateBulkResponse": {
      "type": "object",
      "properties": {
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GroupLensConnection"
          },
          "description": "List of group \u0026 lens connections."
        }
      },
      "description": "Response to create group \u0026 lens connections in bulk."
    },
    "com.snap.camerakit.admin.s2s.v1.CreateConnectionRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "description": "group identifier - group Id."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "priority of the lens."
        },
        "vendor_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.VendorDataItem"
          },
          "description": "vendor data specific to the lens."
        },
        "schedule": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Schedule",
          "description": "schedule."
        },
        "lens_compound_id": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensCompoundId",
          "description": "lens identifier - LensCompoundId which has lensID \u0026 reference."
        }
      },
      "description": "Request to create connection between a lens \u0026 a group."
    },
    "com.snap.camerakit.admin.s2s.v1.GetGroupListRequest.Query": {
      "type": "string",
      "enum": [
        "ONLY_ACTIVE_UNSET",
        "ALL"
      ],
      "default": "ONLY_ACTIVE_UNSET",
      "description": "query enum.\n\n - ONLY_ACTIVE_UNSET: only active\n - ALL: all."
    },
    "com.snap.camerakit.admin.s2s.v1.GetGroupListResponse": {
      "type": "object",
      "properties": {
        "groups_with_connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GetGroupResponse"
          },
          "description": "list of lens-group connections."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "total."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.GetGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Group",
          "description": "group metadata."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GroupLensConnection"
          },
          "description": "list of lens-group connections."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.GetLensListResponse": {
      "type": "object",
      "properties": {
        "lenses_with_connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GetLensResponse"
          },
          "description": "list of group-lens connections."
        },
        "total": {
          "type": "integer",
          "format": "int32",
          "description": "total."
        },
        "cursor": {
          "type": "string",
          "description": "cursor-pagination strategy."
        },
        "has_more": {
          "type": "boolean",
          "description": "has more."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.GetLensResponse": {
      "type": "object",
      "properties": {
        "lens": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Lens",
          "description": "lens metadata."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GroupLensConnection"
          },
          "description": "list of group-lens connections."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.Group": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "group identifier - group Id."
        },
        "name": {
          "type": "string",
          "description": "Group name."
        },
        "status": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Group.Status",
          "description": "Group status."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "Group creation time."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "Group and its connections last update time."
        },
        "total_num_lenses": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of lenses in the group."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.Group.Status": {
      "type": "string",
      "enum": [
        "ACTIVE_UNSET",
        "ARCHIVED"
      ],
      "default": "ACTIVE_UNSET",
      "description": "Group status.\n\n - ACTIVE_UNSET: active status.\n - ARCHIVED: archived status."
    },
    "com.snap.camerakit.admin.s2s.v1.GroupLensConnection": {
      "type": "object",
      "properties": {
        "connection_id": {
          "type": "string",
          "description": "connection identifier between a lens and a group."
        },
        "lens": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Lens",
          "description": "Lens metadata."
        },
        "group": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Group",
          "description": "Group that holds the lens."
        },
        "priority": {
          "type": "integer",
          "format": "int32",
          "description": "Lens priority inside the group."
        },
        "vendor_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.VendorDataItem"
          },
          "description": "Ordered map for holding vendor data."
        },
        "schedule": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Schedule",
          "description": "A schedule when a lens should be served."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.Label": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "label key."
        },
        "value": {
          "type": "string",
          "description": "label value."
        }
      },
      "description": "label."
    },
    "com.snap.camerakit.admin.s2s.v1.Lens": {
      "type": "object",
      "properties": {
        "compound_id": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensCompoundId",
          "description": "Compound lens id is the unique lens identifier."
        },
        "name": {
          "type": "string",
          "description": "lens name."
        },
        "icon_url": {
          "type": "string",
          "title": "lens icon_url"
        },
        "preview_url": {
          "type": "string",
          "description": "lens preview url."
        },
        "created_at": {
          "type": "string",
          "format": "date-time",
          "description": "lens created at timestamp."
        },
        "updated_at": {
          "type": "string",
          "format": "date-time",
          "description": "lens updated at timestamp."
        },
        "vendor_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.VendorDataItem"
          },
          "description": "lens vendor data."
        },
        "labels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Label"
          },
          "description": "Dynamic key value labels. The field is used to pass data which is not typical for all lenses.\nFor example, Schedule V3 namespace alias."
        },
        "removed": {
          "type": "boolean",
          "description": "The flag is used for lenses which were deleted or no longer available for an organization,\nhowever the link to them is still present in connections."
        },
        "lens_source_info": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensSourceInfo",
          "description": "Lens source related information."
        },
        "min_sdk_version": {
          "type": "string",
          "description": "Minimum Camera Kit SDK version needed to process the lens."
        },
        "lens_status": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensStatus",
          "description": "Lens status enum."
        },
        "has_music": {
          "type": "boolean",
          "description": "The flag defines if the lens contains music tracks."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.LensCompoundId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Lens id."
        },
        "reference": {
          "type": "string",
          "description": "The reference is used to identify an owner for the current lens source. It can be a reference to Snapchat User ID\nif lens lens source is Snapchat User; or it can be a reference to namespace if lens source is lens space."
        }
      },
      "description": "A compound id to uniquely distinguish lenses among different lens sources."
    },
    "com.snap.camerakit.admin.s2s.v1.LensSourceInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Lens source name. Can be a Business Profile name, user display name, etc."
        }
      },
      "description": "Lens Source Info."
    },
    "com.snap.camerakit.admin.s2s.v1.LensStatus": {
      "type": "string",
      "enum": [
        "LENS_STATUS_UNSET",
        "LENS_STATUS_IN_REVIEW",
        "LENS_STATUS_INVALID",
        "LENS_STATUS_READY",
        "LENS_STATUS_FINALIZED",
        "LENS_STATUS_REJECTED",
        "LENS_STATUS_FINALIZING",
        "LENS_STATUS_LIVE",
        "LENS_STATUS_OFFLINE",
        "LENS_STATUS_HIDDEN",
        "LENS_STATUS_AWAITING_PRODUCT_TAGGING",
        "LENS_STATUS_NOT_PUBLISHED_TO_SNAPCHAT"
      ],
      "default": "LENS_STATUS_UNSET",
      "description": "LensStatus enum.\n\n - LENS_STATUS_UNSET: unspecified value\n - LENS_STATUS_IN_REVIEW: lens status IN_REVIEW\n - LENS_STATUS_INVALID: lens status INVALID\n - LENS_STATUS_READY: lens status READY\n - LENS_STATUS_FINALIZED: lens status FINALIZED\n - LENS_STATUS_REJECTED: lens status REJECTED\n - LENS_STATUS_FINALIZING: lens status FINALIZING\n - LENS_STATUS_LIVE: lens status LIVE\n - LENS_STATUS_OFFLINE: lens status OFFLINE\n - LENS_STATUS_HIDDEN: lens status HIDDEN\n - LENS_STATUS_AWAITING_PRODUCT_TAGGING: lens status AWAITING_PRODUCT_TAGGING\n - LENS_STATUS_NOT_PUBLISHED_TO_SNAPCHAT: lens status NOT PUBLISHED TO SNAPCHAT"
    },
    "com.snap.camerakit.admin.s2s.v1.ReleaseBulkRequest": {
      "type": "object",
      "properties": {
        "release_requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.ReleaseConnectionRequest"
          },
          "description": "list of release group \u0026 lens connection requests."
        }
      },
      "description": "Request to release group \u0026 lens connection in bulk."
    },
    "com.snap.camerakit.admin.s2s.v1.ReleaseBulkResponse": {
      "type": "object",
      "properties": {
        "release_responses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.ReleaseConnectionResponse"
          },
          "description": "list of release group \u0026 lens connection responses."
        }
      },
      "description": "Response to release group \u0026 lens connections in bulk."
    },
    "com.snap.camerakit.admin.s2s.v1.ReleaseConnectionRequest": {
      "type": "object",
      "properties": {
        "group_id": {
          "type": "string",
          "description": "group identifier - group Id."
        },
        "lens_compound_id": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensCompoundId",
          "description": "lens identifier - LensCompoundId which has lensID \u0026 reference."
        }
      },
      "description": "Request to release connection between a lens \u0026 a group."
    },
    "com.snap.camerakit.admin.s2s.v1.ReleaseConnectionResponse": {
      "type": "object",
      "properties": {
        "connection_id": {
          "type": "string",
          "description": "connection identifier between a lens and a group."
        },
        "group_id": {
          "type": "string",
          "description": "group identifier - group Id."
        },
        "lens_compound_id": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensCompoundId",
          "description": "lens identifier - LensCompoundId which has lensID \u0026 reference."
        }
      },
      "description": "Response to release connection between a lens \u0026 a group."
    },
    "com.snap.camerakit.admin.s2s.v1.SaveGroupRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "group identifier - group Id."
        },
        "name": {
          "type": "string",
          "description": "group name."
        },
        "status": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Group.Status",
          "description": "group status."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.SaveGroupResponse": {
      "type": "object",
      "properties": {
        "group": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Group",
          "description": "group metadata."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GroupLensConnection"
          },
          "description": "list of lens-group connections."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.Schedule": {
      "type": "object",
      "properties": {
        "schedule_start": {
          "type": "string",
          "format": "date-time",
          "title": "Schedule interval start time. Number of seconds and nanos from 1970 UTC"
        },
        "schedule_end": {
          "type": "string",
          "format": "date-time",
          "title": "Schedule interval end time. Number of seconds and nanos from 1970 UTC"
        },
        "use_client_timezone": {
          "type": "boolean",
          "title": "'true' if schedule represents time in a client's local timezone"
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.UpdateLensVendorDataRequest": {
      "type": "object",
      "properties": {
        "vendor_data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.VendorDataItem"
          },
          "description": "vendor data specific to the lens."
        },
        "lens_compound_id": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.LensCompoundId",
          "description": "lens identifier - LensCompoundId which has lensID \u0026 reference."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.UpdateLensVendorDataResponse": {
      "type": "object",
      "properties": {
        "lens": {
          "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.Lens",
          "description": "lens metadata."
        },
        "connections": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/com.snap.camerakit.admin.s2s.v1.GroupLensConnection"
          },
          "description": "list of group-lens connections."
        }
      }
    },
    "com.snap.camerakit.admin.s2s.v1.VendorDataItem": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "vendor data key."
        },
        "value": {
          "type": "string",
          "description": "vendor data value."
        }
      },
      "description": "vendor data item."
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    }
  }
}
